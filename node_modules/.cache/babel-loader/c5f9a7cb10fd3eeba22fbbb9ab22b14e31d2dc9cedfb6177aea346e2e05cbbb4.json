{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LearnForce\\\\Desktop\\\\Task\\\\puzzle-app\\\\src\\\\components\\\\Puzzle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Puzzle = () => {\n  _s();\n  const [number, setNumber] = useState(\"\");\n  const generateGrid = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main-container-puzzle\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Main-Box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Main-form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Main-form-title\",\n            children: \"Random Grid Generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"inputNumber\",\n                  children: \"Enter a number:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  class: \"form-control\",\n                  id: \"inputNumber\",\n                  min: \"1\",\n                  max: \"10\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"btn btn-primary\",\n                onClick: generateGrid,\n                children: \"Generate Grid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"gridContainer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true);\n};\n_s(Puzzle, \"gCBQKHX6lvqgaW1CWsHljSuwdF8=\");\n_c = Puzzle;\nexport default Puzzle;\nvar _c;\n$RefreshReg$(_c, \"Puzzle\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Puzzle","_s","number","setNumber","generateGrid","children","fileName","_jsxFileName","lineNumber","columnNumber","className","class","for","type","id","min","max","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LearnForce/Desktop/Task/puzzle-app/src/components/Puzzle.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Navbar from './Navbar'\r\n\r\nconst Puzzle = () => {\r\n    const [number, setNumber]= useState(\"\");\r\n\r\n    const generateGrid=()=>{\r\n         \r\n    }\r\n  return (\r\n   <>\r\n <Navbar/>\r\n <div className=\"Main-container-puzzle\">\r\n      <form className=\"Main-Box\">\r\n        <div className=\"Main-form-content\">\r\n          <h3 className=\"Main-form-title\">Random Grid Generator</h3>\r\n          {/* <div className=\"form-group mt-3\">\r\n            <label>How Many Grid You want Generate !</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control mt-1\"\r\n              placeholder=\"Enter number\"\r\n            />\r\n          </div> */}\r\n         \r\n            {/* <img className='Main-logo'src={logo} alt =\"\"/> */}\r\n        \r\n        \r\n          {/* <div className=\"d-grid gap-2 mt-3\">\r\n            <Link to=\"/puzzle\" type=\"submit\" className=\"btn btn-success\">\r\n              Start\r\n            </Link>\r\n          </div> */}\r\n          <div class=\"container\">\r\n    \r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputNumber\">Enter a number:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputNumber\" min=\"1\" max=\"10\" required/>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary\" onClick={generateGrid}>Generate Grid</button>\r\n        </form>\r\n        <div id=\"gridContainer\"></div>\r\n    </div>\r\n        \r\n        </div>\r\n      </form>\r\n    </div>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Puzzle"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAET,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAMU,YAAY,GAACA,CAAA,KAAI,CAEvB,CAAC;EACH,oBACCP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACFR,OAAA,CAACF,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACTZ,OAAA;MAAKa,SAAS,EAAC,uBAAuB;MAAAL,QAAA,eACjCR,OAAA;QAAMa,SAAS,EAAC,UAAU;QAAAL,QAAA,eACxBR,OAAA;UAAKa,SAAS,EAAC,mBAAmB;UAAAL,QAAA,gBAChCR,OAAA;YAAIa,SAAS,EAAC,iBAAiB;YAAAL,QAAA,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAkB1DZ,OAAA;YAAKc,KAAK,EAAC,WAAW;YAAAN,QAAA,gBAExBR,OAAA;cAAAQ,QAAA,gBACIR,OAAA;gBAAKc,KAAK,EAAC,YAAY;gBAAAN,QAAA,gBACnBR,OAAA;kBAAOe,GAAG,EAAC,aAAa;kBAAAP,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAQ,eAChDZ,OAAA;kBAAOgB,IAAI,EAAC,QAAQ;kBAACF,KAAK,EAAC,cAAc;kBAACG,EAAE,EAAC,aAAa;kBAACC,GAAG,EAAC,GAAG;kBAACC,GAAG,EAAC,IAAI;kBAACC,QAAQ;gBAAA;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAE;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACpF,eACNZ,OAAA;gBAAQgB,IAAI,EAAC,QAAQ;gBAACF,KAAK,EAAC,iBAAiB;gBAACO,OAAO,EAAEd,YAAa;gBAAAC,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAS;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACxF,eACPZ,OAAA;cAAKiB,EAAE,EAAC;YAAe;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC5B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH;EAAA,gBACJ;AAEN,CAAC;AAAAR,EAAA,CA/CKD,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAiDZ,eAAeA,MAAM;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}