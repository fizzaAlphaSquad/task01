{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nexport function swap(array, moveIndex, toIndex) {\n  /* #move - Moves an array item from one position in an array to another.\n     Note: This is a pure function so a new array will be returned, instead\n     of altering the array argument.\n    Arguments:\n    1. array     (String) : Array in which to move an item.         (required)\n    2. moveIndex (Object) : The index of the item to move.          (required)\n    3. toIndex   (Object) : The index to move item at moveIndex to. (required)\n  */\n  var item = array[moveIndex];\n  var length = array.length;\n  var diff = moveIndex - toIndex;\n  if (diff > 0) {\n    // move left\n    return tslib_1.__spread(array.slice(0, toIndex), [item], array.slice(toIndex, moveIndex), array.slice(moveIndex + 1, length));\n  } else if (diff < 0) {\n    // move right\n    var targetIndex = toIndex + 1;\n    return tslib_1.__spread(array.slice(0, moveIndex), array.slice(moveIndex + 1, targetIndex), [item], array.slice(targetIndex, length));\n  }\n  return array;\n}","map":{"version":3,"names":["tslib_1","swap","array","moveIndex","toIndex","item","length","diff","__spread","slice","targetIndex"],"sources":["C:/Users/LearnForce/Desktop/Task/puzzle-app/node_modules/react-grid-dnd/esm/swap.js"],"sourcesContent":["import * as tslib_1 from \"tslib\";\nexport function swap(array, moveIndex, toIndex) {\n    /* #move - Moves an array item from one position in an array to another.\n       Note: This is a pure function so a new array will be returned, instead\n       of altering the array argument.\n      Arguments:\n      1. array     (String) : Array in which to move an item.         (required)\n      2. moveIndex (Object) : The index of the item to move.          (required)\n      3. toIndex   (Object) : The index to move item at moveIndex to. (required)\n    */\n    var item = array[moveIndex];\n    var length = array.length;\n    var diff = moveIndex - toIndex;\n    if (diff > 0) {\n        // move left\n        return tslib_1.__spread(array.slice(0, toIndex), [\n            item\n        ], array.slice(toIndex, moveIndex), array.slice(moveIndex + 1, length));\n    }\n    else if (diff < 0) {\n        // move right\n        var targetIndex = toIndex + 1;\n        return tslib_1.__spread(array.slice(0, moveIndex), array.slice(moveIndex + 1, targetIndex), [\n            item\n        ], array.slice(targetIndex, length));\n    }\n    return array;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,OAAO;AAChC,OAAO,SAASC,IAAIA,CAACC,KAAK,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAC5C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,IAAI,GAAGH,KAAK,CAACC,SAAS,CAAC;EAC3B,IAAIG,MAAM,GAAGJ,KAAK,CAACI,MAAM;EACzB,IAAIC,IAAI,GAAGJ,SAAS,GAAGC,OAAO;EAC9B,IAAIG,IAAI,GAAG,CAAC,EAAE;IACV;IACA,OAAOP,OAAO,CAACQ,QAAQ,CAACN,KAAK,CAACO,KAAK,CAAC,CAAC,EAAEL,OAAO,CAAC,EAAE,CAC7CC,IAAI,CACP,EAAEH,KAAK,CAACO,KAAK,CAACL,OAAO,EAAED,SAAS,CAAC,EAAED,KAAK,CAACO,KAAK,CAACN,SAAS,GAAG,CAAC,EAAEG,MAAM,CAAC,CAAC;EAC3E,CAAC,MACI,IAAIC,IAAI,GAAG,CAAC,EAAE;IACf;IACA,IAAIG,WAAW,GAAGN,OAAO,GAAG,CAAC;IAC7B,OAAOJ,OAAO,CAACQ,QAAQ,CAACN,KAAK,CAACO,KAAK,CAAC,CAAC,EAAEN,SAAS,CAAC,EAAED,KAAK,CAACO,KAAK,CAACN,SAAS,GAAG,CAAC,EAAEO,WAAW,CAAC,EAAE,CACxFL,IAAI,CACP,EAAEH,KAAK,CAACO,KAAK,CAACC,WAAW,EAAEJ,MAAM,CAAC,CAAC;EACxC;EACA,OAAOJ,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}