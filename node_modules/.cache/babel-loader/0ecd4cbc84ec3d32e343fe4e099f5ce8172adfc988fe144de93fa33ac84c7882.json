{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LearnForce\\\\Desktop\\\\Task\\\\puzzle-app\\\\src\\\\components\\\\Puzzle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport \"./Puzzle.css\";\nimport Grid from './grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Puzzle = () => {\n  _s();\n  const [size, setSize] = useState(0);\n  console.log(\"-----\", size);\n  function handleSizeChange(event) {\n    setSize(event.target.value);\n  }\n  function handleGenerateClick() {\n    // Render the grid component with the size entered by the user\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // const generateGrid = () => {\n  //   // get input value\n  //   var number = document.getElementById(\"inputNumber\").value;\n\n  //   // create array of numbers to populate grid\n  //   var numbers = [];\n  //   for (var i = 1; i <= number * number; i++) {\n  //     numbers.push(i);\n  //   }\n  //   // shuffle numbers array to randomize order\n  //   for (var i = numbers.length - 1; i > 0; i--) {\n  //     var j = Math.floor(Math.random() * (i + 1));\n  //     var temp = numbers[i];\n  //     numbers[i] = numbers[j];\n  //     numbers[j] = temp;\n  //   }\n  //   {/* <div class =grid-container>  */ }\n  //   // create grid HTML\n  //   var gridHTML = \" <table class='table grid-item t '  > \";\n  //   for (var i = 0; i < number; i++) {\n  //     gridHTML += \"<tr  class=' grid-item '>\";\n  //     for (var j = 0; j < number; j++) {\n  //       gridHTML += \"<td class=' grid-item  '>\" + numbers[i * number + j] + \"</td>\";\n  //     }\n  //     gridHTML += \"</tr>\";\n  //   }\n  //   gridHTML += \"</table>\";\n\n  //   // add grid HTML to container\n  //   document.getElementById(\"gridContainer\").innerHTML = gridHTML;\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main-container-puzzle\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Main-Box-puzzle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Main-form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Main-form-title\",\n            children: \"Random Grid Generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"inputNumber\",\n                  children: \"Enter a number:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  class: \"form-control\",\n                  id: \"inputNumber\",\n                  min: \"1\",\n                  max: \"10\",\n                  required: true,\n                  type: \"number\",\n                  value: size,\n                  onChange: e => {\n                    setSize(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"btn btn-primary\",\n                onClick: handleGenerateClick\n                // onClick={generateGrid}\n                ,\n                children: \"Generate Grid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"gridContainer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Puzzle, \"X3fiLZCbu4yJQwxeScyP67BrMvI=\");\n_c = Puzzle;\nexport default Puzzle;\nvar _c;\n$RefreshReg$(_c, \"Puzzle\");","map":{"version":3,"names":["React","useState","Navbar","Grid","jsxDEV","_jsxDEV","Fragment","_Fragment","Puzzle","_s","size","setSize","console","log","handleSizeChange","event","target","value","handleGenerateClick","fileName","_jsxFileName","lineNumber","columnNumber","children","className","class","for","id","min","max","required","type","onChange","e","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LearnForce/Desktop/Task/puzzle-app/src/components/Puzzle.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Navbar from './Navbar'\r\nimport \"./Puzzle.css\"\r\nimport Grid from './grid';\r\nconst Puzzle = () => {\r\n\r\n  const [size, setSize] = useState(0);\r\nconsole.log(\"-----\",size)\r\n  function handleSizeChange(event) {\r\n    setSize(event.target.value);\r\n  }\r\n\r\n  function handleGenerateClick() {\r\n    // Render the grid component with the size entered by the user\r\n    return <Grid size={size} />;\r\n  }\r\n\r\n  // const generateGrid = () => {\r\n  //   // get input value\r\n  //   var number = document.getElementById(\"inputNumber\").value;\r\n\r\n  //   // create array of numbers to populate grid\r\n  //   var numbers = [];\r\n  //   for (var i = 1; i <= number * number; i++) {\r\n  //     numbers.push(i);\r\n  //   }\r\n  //   // shuffle numbers array to randomize order\r\n  //   for (var i = numbers.length - 1; i > 0; i--) {\r\n  //     var j = Math.floor(Math.random() * (i + 1));\r\n  //     var temp = numbers[i];\r\n  //     numbers[i] = numbers[j];\r\n  //     numbers[j] = temp;\r\n  //   }\r\n  //   {/* <div class =grid-container>  */ }\r\n  //   // create grid HTML\r\n  //   var gridHTML = \" <table class='table grid-item t '  > \";\r\n  //   for (var i = 0; i < number; i++) {\r\n  //     gridHTML += \"<tr  class=' grid-item '>\";\r\n  //     for (var j = 0; j < number; j++) {\r\n  //       gridHTML += \"<td class=' grid-item  '>\" + numbers[i * number + j] + \"</td>\";\r\n  //     }\r\n  //     gridHTML += \"</tr>\";\r\n  //   }\r\n  //   gridHTML += \"</table>\";\r\n\r\n  //   // add grid HTML to container\r\n  //   document.getElementById(\"gridContainer\").innerHTML = gridHTML;\r\n  // }\r\n  return (\r\n    <>\r\n      <Navbar \r\n      size={size}\r\n      />\r\n      <div className=\"Main-container-puzzle\">\r\n        <form className=\"Main-Box-puzzle\">\r\n          <div className=\"Main-form-content\">\r\n            <h3 className=\"Main-form-title\">Random Grid Generator</h3>\r\n            <div class=\"container\">\r\n              <form>\r\n                <div class=\"form-group\">\r\n                  <label for=\"inputNumber\">Enter a number:</label>\r\n                  <input  class=\"form-control\" id=\"inputNumber\" min=\"1\" max=\"10\" required\r\n                  type=\"number\" value={size} onChange={(e)=>{setSize(e.target.value)}} />\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-primary\" \r\n                onClick={handleGenerateClick}\r\n                // onClick={generateGrid}\r\n                >Generate Grid</button>\r\n              </form>\r\n              <div id=\"gridContainer\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n{/* \r\n      ********************************** */}\r\n      {/* <div className=\"container\">\r\n      <h1>Random Grid Puzzle</h1>\r\n      <div className=\"input-container\">\r\n        <label className=\"input-label\">\r\n          Grid Size:\r\n          <input className=\"input-field\" type=\"number\" value={size} onChange={handleSizeChange} />\r\n        </label>\r\n        <button className=\"generate-button\" onClick={handleGenerateClick}>Generate</button>\r\n      </div>\r\n    </div> */}\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Puzzle"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}