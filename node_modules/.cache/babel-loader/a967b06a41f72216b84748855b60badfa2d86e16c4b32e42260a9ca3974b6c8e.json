{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LearnForce\\\\Desktop\\\\Task\\\\puzzle-app\\\\src\\\\components\\\\grid.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grid(_ref) {\n  let {\n    size\n  } = _ref;\n  console.log(\"size:\", size);\n  const grid = [];\n  for (let i = 0; i < size; i++) {\n    const row = [];\n    for (let j = 0; j < size; j++) {\n      row.push(Math.floor(Math.random() * 10)); // Generate a random number between 0 and 9\n    }\n\n    grid.push(row);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cell\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Grid","_ref","size","console","log","grid","i","row","j","push","Math","floor","random","children","map","cell","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LearnForce/Desktop/Task/puzzle-app/src/components/grid.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Grid({size}) {\r\n  \r\n  console.log(\"size:\",size)\r\n  const grid = [];\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    const row = [];\r\n\r\n    for (let j = 0; j < size; j++) {\r\n      row.push(Math.floor(Math.random() * 10)); // Generate a random number between 0 and 9\r\n    }\r\n\r\n    grid.push(row);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {grid.map((row, i) => (\r\n        <div key={i}>\r\n          {row.map((cell, j) => (\r\n            <span key={j}>{cell}</span>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAAC,IAAA,EAAS;EAAA,IAAR;IAACC;EAAI,CAAC,GAAAD,IAAA;EAElBE,OAAO,CAACC,GAAG,CAAC,OAAO,EAACF,IAAI,CAAC;EACzB,MAAMG,IAAI,GAAG,EAAE;EAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,EAAEI,CAAC,EAAE,EAAE;IAC7B,MAAMC,GAAG,GAAG,EAAE;IAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,IAAI,EAAEM,CAAC,EAAE,EAAE;MAC7BD,GAAG,CAACE,IAAI,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5C;;IAEAP,IAAI,CAACI,IAAI,CAACF,GAAG,CAAC;EAChB;EAEA,oBACER,OAAA;IAAAc,QAAA,EACGR,IAAI,CAACS,GAAG,CAAC,CAACP,GAAG,EAAED,CAAC,kBACfP,OAAA;MAAAc,QAAA,EACGN,GAAG,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEP,CAAC,kBACfT,OAAA;QAAAc,QAAA,EAAeE;MAAI,GAARP,CAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACb;IAAC,GAHMb,CAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACC,EAAA,GA1BQpB,IAAI;AA4Bb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}