{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LearnForce\\\\Desktop\\\\Task\\\\puzzle-app\\\\src\\\\components\\\\Puzzle.jsx\";\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport \"./Puzzle.css\";\nimport PuzzuleGame from './PuzzuleGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Puzzle = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"  w-full h-screen pt-10 pb-3 z-50 justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"   bg-zinc-300 w-full h-screen \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 w-full mt-8 h-7   justify-center items-center \",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Main-form-title\",\n            children: \" Grid Generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group  justify-center items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"inputNumber\",\n                  children: \"Enter a number:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  class: \"form-control\",\n                  onChange: handleInputChange,\n                  maxlength: \"1\",\n                  oninput: \"this.value=this.value.replace(/[^0-9]/g,'');\",\n                  type: \"number\",\n                  value: size\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                gridTemplateColumns: `repeat(${size}, 1fr)`\n              },\n              className: `gridSelected grid rounded-xl  grid-cols-${size} grid-rows-${size} shadow-4xl  w-full  justify-items-center gap-4   mx-auto p-6`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  draggable: true,\n                  onDrop: handleDrop,\n                  onDragStart: (event, x) => handleDragStart(event, x),\n                  onDrag: handleDrag,\n                  onDragEnd: handleDragEnd,\n                  className: \"grid-row\",\n                  children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"grid-col\",\n                    draggable: true,\n                    onDrop: handleDrop,\n                    onDragStart: handleDragStart,\n                    onDrag: handleDrag,\n                    onDragEnd: handleDragEnd,\n                    children: cell\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 25\n                  }, this))\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"modal  bg-zinc-400 pt-10 pb-3 z-50 flex-col  w-full h-screen justify-center items-center opacity-90  absolute top-0 bottom-0 right-0  left-0 border border-zinc-600\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"text-xl text-zinc-900 font-bold pb-10 z-50\",\n                  children: \"You solved this puzzle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n_c = Puzzle;\nexport default Puzzle;\nvar _c;\n$RefreshReg$(_c, \"Puzzle\");","map":{"version":3,"names":["React","useState","Navbar","PuzzuleGame","jsxDEV","_jsxDEV","Fragment","_Fragment","Puzzle","children","fileName","_jsxFileName","lineNumber","columnNumber","className","class","for","onChange","handleInputChange","maxlength","oninput","type","value","size","style","gridTemplateColumns","grid","map","row","i","draggable","onDrop","handleDrop","onDragStart","event","x","handleDragStart","onDrag","handleDrag","onDragEnd","handleDragEnd","cell","j","_c","$RefreshReg$"],"sources":["C:/Users/LearnForce/Desktop/Task/puzzle-app/src/components/Puzzle.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Navbar from './Navbar'\r\nimport \"./Puzzle.css\"\r\nimport PuzzuleGame from './PuzzuleGame';\r\nconst Puzzle = () => {\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n     {/* <SortableList/> */}  {/* <PuzzuleGame/> */}\r\n       <div className=\"  w-full h-screen pt-10 pb-3 z-50 justify-center items-center\">\r\n        <form className=\"   bg-zinc-300 w-full h-screen \">\r\n          <div className=\"p-3 w-full mt-8 h-7   justify-center items-center \">\r\n            <h3 className=\"Main-form-title\"> Grid Generator</h3>\r\n            <div class=\"container\">\r\n              <form>\r\n                <div class=\"form-group  justify-center items-center\">\r\n                  <label for=\"inputNumber\">Enter a number:</label>\r\n                  <input class=\"form-control\"\r\n                    onChange={handleInputChange}\r\n                    maxlength=\"1\"\r\n                    oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\"\r\n                    type=\"number\" value={size}\r\n                  />\r\n                </div>\r\n              </form>\r\n\r\n              <div\r\n                style={{ gridTemplateColumns: `repeat(${size}, 1fr)` }}\r\n                className={`gridSelected grid rounded-xl  grid-cols-${size} grid-rows-${size} shadow-4xl  w-full  justify-items-center gap-4   mx-auto p-6`}\r\n              >\r\n                <div>\r\n                  {grid.map((row, i) => (\r\n                    <div\r\n                      draggable\r\n                      onDrop={handleDrop}\r\n                      onDragStart={(event,x)=>handleDragStart(event,x)}\r\n                      onDrag={handleDrag}\r\n                      onDragEnd={handleDragEnd}\r\n                      className='grid-row'\r\n                      key={i}>\r\n                      {row.map((cell, j) => (\r\n                        <span className='grid-col'\r\n                          draggable\r\n                          onDrop={handleDrop}\r\n                          onDragStart={handleDragStart}\r\n                          onDrag={handleDrag}\r\n                          onDragEnd={handleDragEnd}\r\n                          key={j}>{cell}</span>\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div class=\"modal  bg-zinc-400 pt-10 pb-3 z-50 flex-col  w-full h-screen justify-center items-center opacity-90  absolute top-0 bottom-0 right-0  left-0 border border-zinc-600\">\r\n                  <p class=\"text-xl text-zinc-900 font-bold pb-10 z-50\">You solved this puzzle</p></div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div> \r\n\r\n      {/* \r\n      ********************************** */}\r\n      {/* <div className=\"container\">\r\n      <h1>Random Grid Puzzle</h1>\r\n      <div className=\"input-container\">\r\n        <label className=\"input-label\">\r\n          Grid Size:\r\n          <input className=\"input-field\" type=\"number\" value={size} onChange={handleSizeChange} />\r\n        </label>\r\n        <button className=\"generate-button\" onClick={handleGenerateClick}>Generate</button>\r\n      </div>\r\n    </div> */}\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Puzzle"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}